Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.230s
 110 - 500000 ordered INSERTS with one index/PK....................    0.369s
 120 - 500000 unordered INSERTS with one index/PK..................    0.532s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.535s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.707s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.717s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.591s
 150 - CREATE INDEX five times.....................................    1.089s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.818s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.852s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.258s
 180 - 500000 INSERTS with three indexes...........................    0.984s
 190 - DELETE and REFILL one table.................................    0.976s
 200 - VACUUM......................................................    0.616s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.027s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.676s
 240 - 500000 UPDATES of individual rows...........................    0.627s
 250 - One big UPDATE of the whole 500000-row table................    0.065s
 260 - Query added column after filling............................    0.027s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    0.984s
 280 - 500000 DELETEs of individual rows...........................    0.957s
 290 - Refill two 500000-row tables using REPLACE..................    1.824s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.080s
 310 - 100000 four-ways joins......................................    2.610s
 320 - subquery in result set......................................    8.496s
 400 - 700000 REPLACE ops on an IPK................................    0.646s
 410 - 700000 SELECTS on an IPK....................................    0.419s
 500 - 700000 REPLACE on TEXT PK...................................    0.892s
 510 - 700000 SELECTS on a TEXT PK.................................    0.721s
 520 - 700000 SELECT DISTINCT......................................    0.372s
 980 - PRAGMA integrity_check......................................    2.416s
 990 - ANALYZE.....................................................    0.185s
       TOTAL.......................................................   37.298s
Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.235s
 110 - 500000 ordered INSERTS with one index/PK....................    0.368s
 120 - 500000 unordered INSERTS with one index/PK..................    0.533s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.537s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.709s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.685s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.591s
 150 - CREATE INDEX five times.....................................    1.126s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.821s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.849s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.259s
 180 - 500000 INSERTS with three indexes...........................    0.999s
 190 - DELETE and REFILL one table.................................    0.999s
 200 - VACUUM......................................................    0.618s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.026s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.676s
 240 - 500000 UPDATES of individual rows...........................    0.624s
 250 - One big UPDATE of the whole 500000-row table................    0.066s
 260 - Query added column after filling............................    0.026s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    0.969s
 280 - 500000 DELETEs of individual rows...........................    0.952s
 290 - Refill two 500000-row tables using REPLACE..................    1.775s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.081s
 310 - 100000 four-ways joins......................................    2.610s
 320 - subquery in result set......................................    8.857s
 400 - 700000 REPLACE ops on an IPK................................    0.644s
 410 - 700000 SELECTS on an IPK....................................    0.422s
 500 - 700000 REPLACE on TEXT PK...................................    0.885s
 510 - 700000 SELECTS on a TEXT PK.................................    0.686s
 520 - 700000 SELECT DISTINCT......................................    0.368s
 980 - PRAGMA integrity_check......................................    2.415s
 990 - ANALYZE.....................................................    0.185s
       TOTAL.......................................................   37.596s
Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.231s
 110 - 500000 ordered INSERTS with one index/PK....................    0.370s
 120 - 500000 unordered INSERTS with one index/PK..................    0.533s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.538s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.710s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.691s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.600s
 150 - CREATE INDEX five times.....................................    1.116s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.822s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.846s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.258s
 180 - 500000 INSERTS with three indexes...........................    0.988s
 190 - DELETE and REFILL one table.................................    0.975s
 200 - VACUUM......................................................    0.618s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.027s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.674s
 240 - 500000 UPDATES of individual rows...........................    0.623s
 250 - One big UPDATE of the whole 500000-row table................    0.066s
 260 - Query added column after filling............................    0.026s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    0.965s
 280 - 500000 DELETEs of individual rows...........................    0.954s
 290 - Refill two 500000-row tables using REPLACE..................    1.778s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.102s
 310 - 100000 four-ways joins......................................    2.618s
 320 - subquery in result set......................................    8.386s
 400 - 700000 REPLACE ops on an IPK................................    0.643s
 410 - 700000 SELECTS on an IPK....................................    0.419s
 500 - 700000 REPLACE on TEXT PK...................................    0.882s
 510 - 700000 SELECTS on a TEXT PK.................................    0.685s
 520 - 700000 SELECT DISTINCT......................................    0.371s
 980 - PRAGMA integrity_check......................................    2.455s
 990 - ANALYZE.....................................................    0.186s
       TOTAL.......................................................   37.156s
Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.230s
 110 - 500000 ordered INSERTS with one index/PK....................    0.368s
 120 - 500000 unordered INSERTS with one index/PK..................    0.535s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.534s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.708s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.682s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.590s
 150 - CREATE INDEX five times.....................................    1.090s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.821s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.846s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.255s
 180 - 500000 INSERTS with three indexes...........................    0.984s
 190 - DELETE and REFILL one table.................................    0.985s
 200 - VACUUM......................................................    0.623s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.027s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.706s
 240 - 500000 UPDATES of individual rows...........................    0.622s
 250 - One big UPDATE of the whole 500000-row table................    0.066s
 260 - Query added column after filling............................    0.026s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    0.966s
 280 - 500000 DELETEs of individual rows...........................    0.951s
 290 - Refill two 500000-row tables using REPLACE..................    1.776s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.078s
 310 - 100000 four-ways joins......................................    2.602s
 320 - subquery in result set......................................    8.756s
 400 - 700000 REPLACE ops on an IPK................................    0.642s
 410 - 700000 SELECTS on an IPK....................................    0.419s
 500 - 700000 REPLACE on TEXT PK...................................    0.885s
 510 - 700000 SELECTS on a TEXT PK.................................    0.690s
 520 - 700000 SELECT DISTINCT......................................    0.367s
 980 - PRAGMA integrity_check......................................    2.416s
 990 - ANALYZE.....................................................    0.185s
       TOTAL.......................................................   37.431s
Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.231s
 110 - 500000 ordered INSERTS with one index/PK....................    0.369s
 120 - 500000 unordered INSERTS with one index/PK..................    0.534s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.534s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.708s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.678s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.590s
 150 - CREATE INDEX five times.....................................    1.107s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.851s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.844s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.255s
 180 - 500000 INSERTS with three indexes...........................    0.983s
 190 - DELETE and REFILL one table.................................    0.982s
 200 - VACUUM......................................................    0.618s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.026s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.674s
 240 - 500000 UPDATES of individual rows...........................    0.623s
 250 - One big UPDATE of the whole 500000-row table................    0.065s
 260 - Query added column after filling............................    0.027s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    0.965s
 280 - 500000 DELETEs of individual rows...........................    0.948s
 290 - Refill two 500000-row tables using REPLACE..................    1.771s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.084s
 310 - 100000 four-ways joins......................................    2.707s
 320 - subquery in result set......................................    8.291s
 400 - 700000 REPLACE ops on an IPK................................    0.646s
 410 - 700000 SELECTS on an IPK....................................    0.421s
 500 - 700000 REPLACE on TEXT PK...................................    0.885s
 510 - 700000 SELECTS on a TEXT PK.................................    0.687s
 520 - 700000 SELECT DISTINCT......................................    0.368s
 980 - PRAGMA integrity_check......................................    2.423s
 990 - ANALYZE.....................................................    0.185s
       TOTAL.......................................................   37.080s
Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.239s
 110 - 500000 ordered INSERTS with one index/PK....................    0.377s
 120 - 500000 unordered INSERTS with one index/PK..................    0.540s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.534s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.708s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.679s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.590s
 150 - CREATE INDEX five times.....................................    1.091s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.825s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.848s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.260s
 180 - 500000 INSERTS with three indexes...........................    0.986s
 190 - DELETE and REFILL one table.................................    0.977s
 200 - VACUUM......................................................    0.619s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.027s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.698s
 240 - 500000 UPDATES of individual rows...........................    0.638s
 250 - One big UPDATE of the whole 500000-row table................    0.069s
 260 - Query added column after filling............................    0.029s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    0.978s
 280 - 500000 DELETEs of individual rows...........................    0.953s
 290 - Refill two 500000-row tables using REPLACE..................    1.776s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.080s
 310 - 100000 four-ways joins......................................    2.612s
 320 - subquery in result set......................................    8.711s
 400 - 700000 REPLACE ops on an IPK................................    0.644s
 410 - 700000 SELECTS on an IPK....................................    0.420s
 500 - 700000 REPLACE on TEXT PK...................................    0.886s
 510 - 700000 SELECTS on a TEXT PK.................................    0.687s
 520 - 700000 SELECT DISTINCT......................................    0.369s
 980 - PRAGMA integrity_check......................................    2.422s
 990 - ANALYZE.....................................................    0.185s
       TOTAL.......................................................   37.457s
Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.235s
 110 - 500000 ordered INSERTS with one index/PK....................    0.368s
 120 - 500000 unordered INSERTS with one index/PK..................    0.532s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.537s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.709s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.678s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.592s
 150 - CREATE INDEX five times.....................................    1.089s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.840s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.891s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.258s
 180 - 500000 INSERTS with three indexes...........................    0.984s
 190 - DELETE and REFILL one table.................................    1.069s
 200 - VACUUM......................................................    1.766s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.081s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.709s
 240 - 500000 UPDATES of individual rows...........................    0.621s
 250 - One big UPDATE of the whole 500000-row table................    0.066s
 260 - Query added column after filling............................    0.027s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    0.967s
 280 - 500000 DELETEs of individual rows...........................    0.949s
 290 - Refill two 500000-row tables using REPLACE..................    1.772s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.088s
 310 - 100000 four-ways joins......................................    2.638s
 320 - subquery in result set......................................    8.298s
 400 - 700000 REPLACE ops on an IPK................................    0.646s
 410 - 700000 SELECTS on an IPK....................................    0.418s
 500 - 700000 REPLACE on TEXT PK...................................    0.885s
 510 - 700000 SELECTS on a TEXT PK.................................    0.692s
 520 - 700000 SELECT DISTINCT......................................    0.368s
 980 - PRAGMA integrity_check......................................    2.439s
 990 - ANALYZE.....................................................    0.185s
       TOTAL.......................................................   38.397s
Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.232s
 110 - 500000 ordered INSERTS with one index/PK....................    0.379s
 120 - 500000 unordered INSERTS with one index/PK..................    0.544s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.539s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.707s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.679s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.590s
 150 - CREATE INDEX five times.....................................    1.088s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.822s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.848s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.256s
 180 - 500000 INSERTS with three indexes...........................    0.984s
 190 - DELETE and REFILL one table.................................    0.979s
 200 - VACUUM......................................................    0.618s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.027s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.691s
 240 - 500000 UPDATES of individual rows...........................    0.623s
 250 - One big UPDATE of the whole 500000-row table................    0.066s
 260 - Query added column after filling............................    0.026s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    1.004s
 280 - 500000 DELETEs of individual rows...........................    0.950s
 290 - Refill two 500000-row tables using REPLACE..................    1.777s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.083s
 310 - 100000 four-ways joins......................................    2.616s
 320 - subquery in result set......................................    8.516s
 400 - 700000 REPLACE ops on an IPK................................    0.650s
 410 - 700000 SELECTS on an IPK....................................    0.420s
 500 - 700000 REPLACE on TEXT PK...................................    0.888s
 510 - 700000 SELECTS on a TEXT PK.................................    0.692s
 520 - 700000 SELECT DISTINCT......................................    0.367s
 980 - PRAGMA integrity_check......................................    2.422s
 990 - ANALYZE.....................................................    0.185s
       TOTAL.......................................................   37.268s
Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.230s
 110 - 500000 ordered INSERTS with one index/PK....................    0.367s
 120 - 500000 unordered INSERTS with one index/PK..................    0.531s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.536s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.711s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.676s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.591s
 150 - CREATE INDEX five times.....................................    1.088s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.833s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.868s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.260s
 180 - 500000 INSERTS with three indexes...........................    0.986s
 190 - DELETE and REFILL one table.................................    0.976s
 200 - VACUUM......................................................    0.617s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.027s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.673s
 240 - 500000 UPDATES of individual rows...........................    0.624s
 250 - One big UPDATE of the whole 500000-row table................    0.066s
 260 - Query added column after filling............................    0.026s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    0.967s
 280 - 500000 DELETEs of individual rows...........................    0.949s
 290 - Refill two 500000-row tables using REPLACE..................    1.772s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.079s
 310 - 100000 four-ways joins......................................    2.630s
 320 - subquery in result set......................................   10.584s
 400 - 700000 REPLACE ops on an IPK................................    0.644s
 410 - 700000 SELECTS on an IPK....................................    0.419s
 500 - 700000 REPLACE on TEXT PK...................................    0.885s
 510 - 700000 SELECTS on a TEXT PK.................................    0.688s
 520 - 700000 SELECT DISTINCT......................................    0.368s
 980 - PRAGMA integrity_check......................................    2.422s
 990 - ANALYZE.....................................................    0.186s
       TOTAL.......................................................   39.279s
Gramine is starting. Parsing TOML manifest file, this may take some time...
-----------------------------------------------------------------------------------------------------------------------
Gramine detected the following insecure configurations:

  - sgx.debug = true                           (this is a debug enclave)
  - loader.insecure__use_cmdline_argv = true   (forwarding command-line args from untrusted host to the app)
  - fs.insecure__keys.* = "..."                (keys hardcoded in manifest)

Gramine will continue application execution, but this configuration must not be used in production!
-----------------------------------------------------------------------------------------------------------------------

-- Speedtest1 for SQLite 3.47.0 2024-10-03 16:31:08 825f01d7e258ac7981f715fd1070
 100 - 500000 INSERTs into table with no index.....................    0.237s
 110 - 500000 ordered INSERTS with one index/PK....................    0.377s
 120 - 500000 unordered INSERTS with one index/PK..................    0.532s
 130 - 25 SELECTS, numeric BETWEEN, unindexed......................    0.536s
 140 - 10 SELECTS, LIKE, unindexed.................................    0.708s
 142 - 10 SELECTS w/ORDER BY, unindexed............................    1.684s
 145 - 10 SELECTS w/ORDER BY and LIMIT, unindexed..................    0.591s
 150 - CREATE INDEX five times.....................................    1.118s
 160 - 100000 SELECTS, numeric BETWEEN, indexed....................    1.816s
 161 - 100000 SELECTS, numeric BETWEEN, PK.........................    1.843s
 170 - 100000 SELECTS, text BETWEEN, indexed.......................    1.257s
 180 - 500000 INSERTS with three indexes...........................    0.985s
 190 - DELETE and REFILL one table.................................    0.983s
 200 - VACUUM......................................................    0.625s
 210 - ALTER TABLE ADD COLUMN, and query...........................    0.026s
 230 - 100000 UPDATES, numeric BETWEEN, indexed....................    1.675s
 240 - 500000 UPDATES of individual rows...........................    0.639s
 250 - One big UPDATE of the whole 500000-row table................    0.067s
 260 - Query added column after filling............................    0.027s
 270 - 100000 DELETEs, numeric BETWEEN, indexed....................    0.972s
 280 - 500000 DELETEs of individual rows...........................    0.947s
 290 - Refill two 500000-row tables using REPLACE..................    1.774s
 300 - Refill a 500000-row table using (b&1)==(a&1)................    1.078s
 310 - 100000 four-ways joins......................................    2.614s
 320 - subquery in result set......................................    8.537s
 400 - 700000 REPLACE ops on an IPK................................    0.643s
 410 - 700000 SELECTS on an IPK....................................    0.419s
 500 - 700000 REPLACE on TEXT PK...................................    0.884s
 510 - 700000 SELECTS on a TEXT PK.................................    0.686s
 520 - 700000 SELECT DISTINCT......................................    0.368s
 980 - PRAGMA integrity_check......................................    2.422s
 990 - ANALYZE.....................................................    0.185s
       TOTAL.......................................................   37.255s
